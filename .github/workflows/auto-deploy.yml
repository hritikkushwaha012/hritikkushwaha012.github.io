name: Auto Deploy to Main GitHub Pages

on:
  push:
    branches: [ main ]  # Trigger on push to main branch
    paths-ignore:
      - '.gitignore'
      - '.github/**'     # Ignore workflow changes to prevent infinite loops

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout primary repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Git
      run: |
        git config --global user.name 'Auto Deploy Bot'
        git config --global user.email 'hritikkushwaha012@users.noreply.github.com'
    
    - name: Clone main GitHub Pages repository
      run: |
        git clone https://${{ secrets.DEPLOY_TOKEN }}@github.com/hritikkushwaha/hritikkushwaha.github.io.git main-site
    
    - name: Sync all files to main repository
      run: |
        # Remove old files (except .git directory and important files)
        cd main-site
        
        # Delete files but preserve .git directory and CNAME
        find . -maxdepth 1 -type f -not -name 'CNAME' -delete 2>/dev/null || true
        find . -mindepth 2 -type f -not -path './.git/*' -delete 2>/dev/null || true
        find . -mindepth 1 -type d -empty -not -name '.git' -delete 2>/dev/null || true
        
        cd ..
        
        # Copy all new files from primary to main site (excluding sensitive files)
        rsync -av --exclude='.git' --exclude='.github' . main-site/
    
    - name: Preserve important GitHub Pages files
      run: |
        # Ensure CNAME file exists if you have a custom domain
        # Uncomment and modify if you have a custom domain:
        # echo "your-domain.com" > main-site/CNAME
        
        # Create or update .gitignore for main site if needed
        if [ ! -f "main-site/.gitignore" ]; then
          echo "# Auto-generated gitignore" > main-site/.gitignore
        fi
    
    - name: Commit and push to main repository
      run: |
        cd main-site
        git add .
        if git diff --staged --quiet; then
          echo "No changes to deploy"
          echo "deploy_status=no_changes" >> $GITHUB_ENV
        else
          git commit -m "Auto-deploy from dev repo - $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin main
          echo "âœ… Successfully deployed to hritikkushwaha.github.io"
          echo "deploy_status=success" >> $GITHUB_ENV
        fi
    
    - name: Deploy Summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Source Repository:** hritikkushwaha012/hritikkushwaha012.github.io" >> $GITHUB_STEP_SUMMARY
        echo "- **Target Repository:** hritikkushwaha/hritikkushwaha.github.io" >> $GITHUB_STEP_SUMMARY
        echo "- **Deploy Time:** $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ${{ env.deploy_status }}" >> $GITHUB_STEP_SUMMARY
        if [ "${{ env.deploy_status }}" = "success" ]; then
          echo "- **Live Site:** https://hritikkushwaha.github.io" >> $GITHUB_STEP_SUMMARY
        fi
